//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends

class Solution{
    public:
    //Function to find minimum adjacent difference in a circular array.
    // arr[]: input array
    // n: size of array
    
    int prefixSum(int arr[],int n){
        
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                arr[i]+=arr[i-1];
            }
        }
    }
    
    int minAdjDiff(int arr[], int n){    
        // Your code here
        if(n<2){
            return 0;
        }
        int min=INT_MAX;
        int diff=0;
        for(int i=0;i<n;i++){
            diff=abs(arr[i]-arr[(i+1)%n]);
            if(diff<min){
                
            min=diff;
            }
        }
        return min;
    }
};

//{ Driver Code Starts.

// Driver code
int main()
{
    int t;
    cin>>t; //Input testcases
    
    while(t--) //While testcases exist
    {
        int n;
        cin>>n; //Input size of array
        
        int arr[n]; //Array of size n
        
        for(int i = 0; i < n; i++)
        {
            cin>>arr[i]; //input elements of array
        }
        Solution ob;
        
        cout << ob.minAdjDiff(arr, n) << endl;
    }
    return 0;
}
// } Driver Code Ends
