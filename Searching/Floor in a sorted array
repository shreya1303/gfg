//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    // Function to find floor of x
    // n: size of vector
    // x: element whose floor is to find
    int findFloor(vector<long long> arr, long long n, long long x) {

        // Your code here
        int low=0;
        int high=n-1;
        
        
        if(x>=arr[high]){
            return high;
        }
        
        if(x<arr[low]){
            return -1;
        }
        
        while(low<=high){
            
        int mid = (low + high) / 2;
 
    // If middle point is floor.
        if (arr[mid] == x){
            return mid;  
        } 
 
        //if x lies between mid and mid-1;
        else if(mid>0 && arr[mid-1]<=x && x<arr[mid]){
            return mid-1;
        }
        
        else if(x>arr[mid]){
            low=mid+1;
        }
        
        else if(x<arr[mid]){
            high=mid-1;
        }
        
        }
    }
};


//{ Driver Code Starts.

int main() {

    long long t;
    cin >> t;

    while (t--) {
        long long n;
        cin >> n;
        long long x;
        cin >> x;

        vector<long long> v;

        for (long long i = 0; i < n; i++) {
            long long temp;
            cin >> temp;
            v.push_back(temp);
        }
        Solution obj;
        cout << obj.findFloor(v, n, x) << endl;
    }

    return 0;
}
// } Driver Code Ends
